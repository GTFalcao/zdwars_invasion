#library "zdwinv"
#include "zcommon.acs"

int maxTids = 80;
int tidsToPick[80]; // ACS pls
int tidCounter = 0;
int startTid = -400;

bool everythingIsDead = false;

script "populate that tid array" open {
	for (int rid = 0; rid < maxTids; rid++) {
		tidsToPick[maxTids] = startTid + rid;
	}
}

script "get new tid on spawn" (int type, int arg1, int arg2) event {
  if (type == GAMEEVENT_ACTOR_SPAWNED && CheckFlag(0, "ISMONSTER") && !(CheckActorProperty(0, APROP_Species, "ZInvEnemy"))) {
    Thing_ChangeTID(0, startTid + tidCounter);
    if (++tidCounter >= maxTids) {
      tidCounter = 0;
    }
  }
}

script "hate something new" (void) {
	if (everythingIsDead == true) terminate;
	// find a random tid
	int tidToHate = startTid + random(0, maxTids - 1);
	int counter = 0;

	// if there is no target, increment the tid
	while (ThingCount(T_NONE, tidToHate) == 0) {
		// but no more than [maxTids] times
		if (++counter > maxTids) {
			// so if no live target is found, wait some time before checking again
			// (performance consideration)
			everythingIsDead = true;
			Delay(35 * 10);
			everythingIsDead = false;

			terminate;
		}

		// wrap around to startTid if the highest one is reached
		if (++tidToHate >= (startTid + maxTids)) {
			tidToHate = startTid;
		}
	}

	Thing_Hate(0, tidToHate, 4);
}

bool suddenDeath = false;

script "sudden death enter" enter {
	GiveInventory("ImDefinitelyAPlayer", 1);

	while (!suddenDeath) {
		Delay(100);
	}

	int counter = 0;
	while (GetActorProperty(0, APROP_Health) > 0) {
		Delay(32);
		DamageThing(++counter, MOD_POISON);
	}
}
script "sudden death respawn" respawn {
	GiveInventory("ImDefinitelyAPlayer", 1);

	while (!suddenDeath) {
		Delay(100);
	}

	int counter = 0;
	while (GetActorProperty(0, APROP_Health) > 0) {
		Delay(32);
		DamageThing(++counter, MOD_POISON);
	}
}


// tag 172 to spawn only for 2+ players
// tag 173 to spawn only for 3+ players
// tag 174 to spawn only for 4+ players
script "invasion spawner scaling and timer" open {
	suddenDeath = false;
	while((GetInvasionState() != IS_FIRSTCOUNTDOWN))
    Delay(20);

	Delay(35 * (GetCVar("sv_invasioncountdowntime") - 1));

	int amountPlayers = PlayerCount();

	PrintBold(s:"Invasion difficulty set for \cv",i:amountPlayers,s: " players");

	if (amountPlayers < 4) {
		Thing_Remove(174);
		if (amountPlayers < 3) {
			Thing_Remove(173);
			if (amountPlayers < 2) {
				Thing_Remove(172);
			}
		}
	}

	// only enable sudden death if sv_maxlives is set
	if (!GetCVar("sv_maxlives")) terminate;

	int timelimit = GetCVar("timelimit");
	if (timelimit >= 65536) timelimit >>= 16;
	if (timelimit < 30 || timelimit > 120) timelimit = 6;

	Delay (35 * 60 * (timelimit - 5));
	
	AmbientSound("announcer/5cp/fiveminutewarning", 127);

	PrintBold(s:"Sudden death begins in 5 minutes!");

	Delay(35 * 60 * 4);

	AmbientSound("announcer/5cp/oneminutewarning", 127);

	PrintBold(s:"Sudden death begins in 1 minute!");

	Delay(35 * 60);

	PrintBold(s:"Sudden death!");
	AmbientSound("announcer/5cp/five", 127);
	Delay(35);
	AmbientSound("announcer/5cp/four", 127);
	Delay(35);
	AmbientSound("announcer/5cp/three", 127);
	Delay(35);
	AmbientSound("announcer/5cp/two", 127);
	Delay(35);
	AmbientSound("announcer/5cp/one", 127);
	Delay(50);

	suddenDeath = true;
}
