#library "zdwinv"
#include "zcommon.acs"

int maxTids = 80;
int tidsToPick[80]; // ACS pls
int tidCounter = 0;
int startTid = -400;

bool everythingIsDead = false;

script "populate that tid array" open {
	for (int rid = 0; rid < maxTids; rid++) {
		tidsToPick[maxTids] = startTid + rid;
	}
}

script "get new tid on spawn" (int type, int arg1, int arg2) event {
  if (type == GAMEEVENT_ACTOR_SPAWNED && CheckFlag(0, "ISMONSTER") && !(CheckActorProperty(0, APROP_Species, "ZInvEnemy"))) {
    Thing_ChangeTID(0, startTid + tidCounter);
    if (++tidCounter >= maxTids) {
      tidCounter = 0;
    }
  }
}

script "hate something new" (void) {
	if (everythingIsDead == true) terminate;
	// find a random tid
	int tidToHate = startTid + random(0, maxTids - 1);
	int counter = 0;

	// if there is no target, increment the tid
	while (ThingCount(T_NONE, tidToHate) == 0) {
		// but no more than [maxTids] times
		if (++counter > maxTids) {
			// so if no live target is found, wait some time before checking again
			// (performance consideration)
			everythingIsDead = true;
			Delay(35 * 10);
			everythingIsDead = false;

			terminate;
		}

		// wrap around to startTid if the highest one is reached
		if (++tidToHate >= (startTid + maxTids)) {
			tidToHate = startTid;
		}
	}

	Thing_Hate(0, tidToHate, 4);
}

bool suddenDeath = false;

script "definitely an enter script" enter {
	GiveInventory("ImDefinitelyAPlayer", 1);
}
script "definitely a respawn script" respawn {
	GiveInventory("ImDefinitelyAPlayer", 1);
}

function void removeSpawners(int amountPlayers) {
	if (amountPlayers < 4) {
		Thing_Remove(174);

		Thing_Remove(185);
		Thing_Remove(186);
		Thing_Remove(187);
		Thing_Remove(188);
		Thing_Remove(189);

		if (amountPlayers < 3) {
			Thing_Remove(173);

			Thing_Remove(180);
			Thing_Remove(181);
			Thing_Remove(182);
			Thing_Remove(183);
			Thing_Remove(184);
			
			if (amountPlayers < 2) {
				Thing_Remove(172);

				Thing_Remove(175);
				Thing_Remove(176);
				Thing_Remove(177);
				Thing_Remove(178);
				Thing_Remove(179);
			}
		}
	}
}


// spawn only for 2+ players: 174, 175, 176, 177, 178, 179
// spawn only for 3+ players: 173, 180, 181, 182, 183, 184
// spawn only for 4+ players: 172, 185, 186, 187, 188, 189
script "invasion spawner scaling and timer" open {
	suddenDeath = false;
	while((GetInvasionState() != IS_FIRSTCOUNTDOWN)) {
    Delay(20);
	}

	Delay(35 * (GetCVar("sv_invasioncountdowntime") - 1));

	int originalAmountPlayers = PlayerCount();

	PrintBold(s:"Invasion difficulty set for \cv",i:originalAmountPlayers,s: " players");
	removeSpawners(originalAmountPlayers);

	while (true) {
		while((GetInvasionState() != IS_COUNTDOWN)) {
			Delay(100);
		}

		int amountPlayers = PlayerCount();
		if (amountPlayers < originalAmountPlayers) {
			PrintBold(s:"Invasion difficulty adjusted for \cv",i:amountPlayers,s: " players");
			removeSpawners(amountPlayers);
		}

		while((GetInvasionState() != IS_INPROGRESS)) {
			Delay(100);
		}
	}
}
